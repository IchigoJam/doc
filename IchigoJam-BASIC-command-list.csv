rdf:type,schema:identifier,schema:name,schema:alternateName,https://sabae.cc/#example,https://sabae.cc/#priority,https://sabae.cc/#yomi@ja,schema:category@ja,https://sabae.cc/#format@ja,schema:description@ja,https://sabae.cc/#yomi@en,schema:category@en,https://sabae.cc/#format@en,schema:description@en
schema:DefiedTerm,1,LED,,LED 1,,エル・イー・ディー,入出力,LED 数,数が1ならLEDが光り、0なら消える,LED,I/O,LED num,"light on the LED when n equals 1, light off when n equals 0"
schema:DefiedTerm,2,WAIT,,WAIT 60,,ウェイト,プログラム,"WAIT 数1{,数2}",数1の数だけ待つ（60で１秒）。マイナスの数を指定すると走査線分で待つ(-261でWAIT1と同じ時間)。省略できる数2に0を指定すると画面表示を止め低電力化して待つ。,wait,Program,"WAIT num{,num2}","wait n frames (60frame = 1sec) (if num2 eqauls 0 low power consumption mode, if num1 is minus short wait mode -261 same as WAIT1)"
schema:DefiedTerm,3,:,,WAIT 60:LED 1,,コロン,プログラム,:,コマンドを後ろに続けて書くときの区切り記号,colon,Program,:,series the commands
schema:DefiedTerm,4,1,,10 LED1,,ワン,プログラム,行番号 {コマンド},1. 数は-32768から32767まで表記できる。 2. 行頭の1〜32767で指定された数は行番号として、コマンドと合わせて記録する。コマンドを省略するとその行を削除（16385以上は指定しないと表示しない）,one,Program,linenum commands,memory commands as line number. Remove line without commands
schema:DefiedTerm,5,RUN,,RUN,,ラン,プログラム,RUN,プログラムを実行する [F5],run,Program,RUN,execute program in memory [F5]
schema:DefiedTerm,6,LIST,,"LIST 10,300",,リスト,プログラム,"LIST {行番号1{,行番号2}}",プログラムを表示する [F4] （行番号1で1行表示、行番号1がマイナスでその行まで表示、行番号2指定でその行まで表示、行番号2が0の時終わりまで表示、ESCで途中停止）,list,Program,"LIST {linenum1{,linenum2}}","show the program in memory [F4] (line num1: show the line, if minus to the line / line num2: show to the line, if 0 to the end / ESC to stop)"
schema:DefiedTerm,7,GOTO,,GOTO 10,,ゴートゥー,プログラム,GOTO 行番号,指定した行番号へ飛ぶ（式も指定可能）,goto,Program,GOTO linenum,change the execution line (it's OK as using variables)
schema:DefiedTerm,8,END,,END,,エンド,プログラム,END,プログラムを終了する,end,Program,END,end this program
schema:DefiedTerm,9,IF,,IF BTN() END,,イフ,プログラム,IF 数 {THEN} コマンド1 {ELSE コマンド2},"数が0でなければコマンド1を実行し、0であればコマンド2を実行する（THEN,ELSE以降は省略可、ただし16進数後は:で区切る必要あり）",if,Program,IF num {THEN} command1 {ELSE command2},"if num does not equals 0 execute command1, else execute command2 (you can ommit THEN / ELSE, need to use : after hex)"
schema:DefiedTerm,10,THEN,,IF BTN() THEN END,,ゼン,プログラム,IF 数 {THEN} コマンド1 {ELSE コマンド2},"数が0でなければコマンド1を実行し、0であればコマンド2を実行する（THEN,ELSE以降は省略可、ただし16進数後は:で区切る必要あり）",then,Program,IF num {THEN} command1 {ELSE command2},"if num does not equals 0 execute command1, else execute command2 (you can ommit THEN / ELSE, need to use : after hex)"
schema:DefiedTerm,11,ELSE,,IF BTN() END ELSE CONT,,エルス,プログラム,IF 数 {THEN} コマンド1 {ELSE コマンド2},"数が0でなければコマンド1を実行し、0であればコマンド2を実行する （THEN,ELSE以降は省略可、ただし16進数後は:で区切る必要あり）",else,Program,IF num {THEN} command1 {ELSE command2},"if num does not equals 0 execute command1, else execute command2 (you can ommit THEN / ELSE, need to use : after hex)"
schema:DefiedTerm,12,BTN,,LED BTN(),,ボタン,入出力,BTN({数}),ボタンが押されていれば1、そうでないとき0を返す（数：0(付属ボタン)/UP/DOWN/RIGHT/LEFT/SPACE/X(88)、省略で0、-1でビットパターンで返す）,button,I/O,BTN({num}),"return 1 if you push the botton, else 0 (num:0(embeded button)/UP/DOWN/RIGHT/LEFT/SPACE/X(88), 0:if ommit, -1:all)"
schema:DefiedTerm,13,NEW,,NEW,,ニュー,プログラム,NEW,プログラムを全部消す,new,Program,NEW,delete all program in the memory
schema:DefiedTerm,14,PRINT,?,"PRINT ""HI!"";15",,プリント,テキスト,PRINT {数や文字列},"数や文字列を表示する （文字列は""で囲む、"";"" で連結できる）",print,Text,PRINT {num or strings},"write the letter or nunmber to the screen (strings must surround [""], connect pars with [;]) Abbreviation:?"
schema:DefiedTerm,15,?,PRINT,"?""HI!"";15",,クエスション,テキスト,? {数や文字列},"数や文字列を表示する （文字列は""で囲む、"";"" で連結できる）",question,Text,? {num or strings},"write the letter or nunmber to the screen (strings must surround [""], connect pars with [;]) Abbreviation:?"
schema:DefiedTerm,16,LOCATE,LC,"LOCATE 3,3",,ロケート,テキスト,"LOCATE 数1{,数2{,数3}}","次に文字を書く位置を横、縦の順に指定する（左上が0,0、縦=-1で無表示）。数1のみでX+Y*幅。数3が0でなければ指定した場所にカーソルを表示する。",locate,Text,"LOCATE x{,y{,num}}",set the position to write (if y equals -1 no write mode). x as X+Y*W when set only x. show the cursor if num not equals 0. Abbreviation:LC
schema:DefiedTerm,17,LC,LOCATE,"LC 3,3",,ロケート,テキスト,"LC 数1{,数2{,数3}}","次に文字を書く位置を横、縦の順に指定する（左上が0,0、縦=-1で無表示）。数1のみでX+Y*幅。数3が0でなければ指定した場所にカーソルを表示する。",locate,Text,"LC x{,y{,num}}",set the position to write (if y equals -1 no write mode). x as X+Y*W when set only x. show the cursor if num not equals 0. Abbreviation:LC
schema:DefiedTerm,18,CLS,,CLS,,クリア・スクリーン,テキスト,CLS,画面を全部消す,clear screen,Text,CLS,clear the screen
schema:DefiedTerm,19,RND,,PRINT RND(6),1,ランダム,計算,RND(数),0から数未満のでたらめな整数を返す,random,Calc,RND(num),return the random number 0 to num - 1
schema:DefiedTerm,20,SAVE,,SAVE 1,,セーブ,ファイル,SAVE {数},プログラムを保存する（0〜3の4つ、100-227 外付けEEPROM、省略で前回使用した数） ボタンを押した状態で起動すると0番を読み込み自動実行,save,File,SAVE {num},"save the program (num:0-3, 100-227:optional EEPROM, if omit using number)"
schema:DefiedTerm,21,LOAD,,LOAD,,ロード,ファイル,LOAD {数},プログラムを読み出す（0〜3の4つ、100-227 外付けEEPROM、省略で前回使用した数）,load,File,LOAD {num},"load the program (num:0-3, 100-227:optional EEPROM, if omit using number)"
schema:DefiedTerm,22,FILES,,FILES,,ファイルズ,ファイル,"FILES {数1{,数2}}",数1(省略可)〜数2のプログラム一覧を表示する（EEPROM内ファイル表示に対応、0指定ですべて表示、ESCで途中停止）,files,File,"FILES {num1{,num2}}","show the file list from num1 to num2 (all if num1 equals 0, ESC to stop)"
schema:DefiedTerm,23,BEEP,,BEEP,,ビープ,サウンド,"BEEP {数1{,数2}}",単音を鳴らす 周期(0-32767)と長さ(1/60秒単位)は省略可 ※SOUND(EX2)-GNDに圧電サウンダーなどの接続が必要,beep,Sound,"BEEP {num1{,num2}}","sound the BEEP, num1 is period(1-255), num2:length(1/60sec) (you can omit num1 and num2) *to connect the sounder on SOUND(EX2)-GND"
schema:DefiedTerm,24,PLAY,,"PLAY ""$CDE2CDE2""",,プレイ,サウンド,"PLAY {""MML""}",MML、記述した音楽を鳴らす。省略で音停止 ※SOUND(EX2)-GNDに圧電サウンダーなどの接続が必要 （MML、CDEFGAB：ドレミファソラシ、R：休符、.：音や休符を1.5倍伸ばす、T120：テンポ、O4：オクターブ(1-6)、N10：単音、<：オクターブ上げる、>：オクターブ下げる、$：繰り返し、'：以後鳴らさない）,play,Sound,PLAY {mml},"play the music specified mml as MML(Music Macro Language) just PLAY to stop the music. MML: CDEFGAB=tone R=rest, + half tone higher, - half tone lower, with num specified length, with . half stretch the length,  < octave up, >	octave down, Tn set the tempo (you can change with TEMPO command) initial value:120, Ln	default length (1,2,3,4,8,16,32) initial value:4, On set the octave from O1C to O5B initial value:3, Nn	sound a tone specified 1-255 (same as BEEP command), ' end of music, $ repeat play after this mark, space is just skip *to connect the sounder on SOUND(EX2)-GND"
schema:DefiedTerm,25,TEMPO,,TEMPO 1200,,テンポ,サウンド,TEMPO 数,再生中の音楽のテンポを変更する,tempo,Sound,TEMPO num,change the tempo of playing music
schema:DefiedTerm,26,+,,PRINT 1+1,5,プラス,計算,数 + 数,足し算する,plus,Calc,x + y,return x plus y
schema:DefiedTerm,27,-,,PRINT 2-1,5,マイナス,計算,数 - 数,1. 引き算する 2. 後に続く数をマイナスにする,minus,Calc,x - y,return x minus y
schema:DefiedTerm,28,*,,PRINT 7*8,4,アスタリスク,計算,数 * 数,掛け算する,asterisk,Calc,x * y,return x times y
schema:DefiedTerm,29,/,,PRINT 9/3,4,スラッシュ,計算,数 / 数,割り算する（小数点以下は切り捨て）,slash,Calc,x / y,return integer of x divide y
schema:DefiedTerm,30,%,,PRINT 10%3,4,パーセント,計算,数 % 数,割り算した余りを返す,percent,Calc,x % y,return reminder of x divide y
schema:DefiedTerm,31,(),,PRINT 1+(1*2),2,ブラケット,計算,(式),カッコ内の式を優先して計算する,blacket,Calc,(num),return calculate the number in priority
schema:DefiedTerm,32,LET,=,"LET A,1",9,レット,計算,"LET 変数,数","数をアルファベット１文字の変数や配列の値として記憶する（配列へ連続代入可能 LET[0],1,2）",let,Calc,"LET var,num",set the number to 1 letter of alphabet as named memory(variable) (series put to the array) Abbreviation:var=num
schema:DefiedTerm,33,=,LET,A=1,9,イコール,計算,変数=数,1. 数をアルファベット１文字の変数や配列の値として記憶する。 2. 式として使うと==と同じ機能となる,equal,Calc,=,1. set the number to 1 letter of alphabet as named memory(variable) 2. same as == when using as number
schema:DefiedTerm,34,INPUT,,"INPUT ""ANS?"",A",,インプット,キー入力,"INPUT {文字列,}変数",キーボードやUARTからの入力で数値を変数にいれる（文字列とコンマは省略可）,input,Key input,"INPUT strings,var",set the number to var from keyboard input (you can omit strings and comma)
schema:DefiedTerm,35,TICK,,PRINT TICK(),1,ティック,計算,TICK({数}),CLTからの時間を返す（1/60秒で1進む） *数に1指定で1/(60*261)秒で1進む時間,tick,Calc,TICK({num}),"return the time count from CLT(count up in 1/60sec) *if nu=1, 1/(60*261)"
schema:DefiedTerm,36,CLT,,CLT,,クリア・ティック,プログラム,CLT,TICK()のカウントをリセットする,clear tick,Program,CLT,clear the time count
schema:DefiedTerm,37,INKEY,,PRINT INKEY(),,インキー,キー入力,INKEY(),キーボードやUARTから１文字入力する（入力がない時は0、UARTから0が入力された時は#100）,inkey,Key input,INKEY(),"return from keyboard or UART (0:no input, #100:0 input from UART)"
schema:DefiedTerm,38,LEFT,,IF INKEY()=LEFT LED1,,レフト,キー入力,LEFT,28を返す。INKEYのキーコードの判定や、SCROLLに使う,left,Key input,LEFT,28. using with INKEY and SCROLL
schema:DefiedTerm,39,RIGHT,,IF INKEY()=RIGHT LED1,,ライト,キー入力,RIGHT,29を返す。INKEYのキーコードの判定や、SCROLLに使う,right,Key input,RIGHT,29. using with INKEY and SCROLL
schema:DefiedTerm,40,UP,,IF INKEY()=UP LED1,,アップ,キー入力,UP,30を返す。INKEYのキーコードの判定や、SCROLLに使う,up,Key input,UP,30. using with INKEY and SCROLL
schema:DefiedTerm,41,DOWN,,IF INKEY()=DOWN LED1,,ダウン,キー入力,DOWN,31を返す。INKEYのキーコードの判定や、SCROLLに使う,down,Key input,DOWN,31. using with INKEY and SCROLL
schema:DefiedTerm,42,SPACE,,IF INKEY()=SPACE LED1,,スペース,キー入力,SPACE,32を返す。INKEYのキーコードの判定や、SCROLLに使う,space,Key input,SPACE,32. using with INKEY and SCROLL
schema:DefiedTerm,43,CHR,,PRINT CHR$(65),,キャラクター,テキスト,"CHR$(数{,数2{,数3…}})",PRINT内で、文字コードに対応する文字を返す（コンマ区切りで連続表記可）,character,Text,CHR$(num),"In PRINT, return the letter string specified the num (you can set series with comma)"
schema:DefiedTerm,44,ASC,,"PRINT ASC(""A"")",1,アスキー,計算,"ASC(""文字"")",文字に対する文字コードを返す,ascii,Calc,"ASC(""string"")",return the letter code from string
schema:DefiedTerm,45,SCROLL,,SCROLL 2,,スクロール,テキスト,SCROLL 数,指定した方向に1キャラ分スクロールする（0/UP:上、1/RIGHT:右、2/DOWN:下、3/LEFT:左）,scroll,Text,SCROLL num,scroll the screen (0/UP:up、1/RIGHT:right、2/DOWN:down、3/LEFT:left)
schema:DefiedTerm,46,SCR,VPEEK,"PRINT SCR(0,0)",,スクリーン,テキスト,"SCR({数,数})",画面上の指定した位置に書かれた文字コードを返す（指定なしで現在位置）,screen,Text,"SCR({x,y})","return the letter code located x, y on the screen (if omit x and y, using current position) Alias:VPEEK"
schema:DefiedTerm,47,VPEEK,SCR,"PRINT VPEEK(0,0)",,ブイ・ピーク,テキスト,"VPEEK({数,数})",画面上の指定した位置に書かれた文字コードを返す（指定なしで現在位置）,V peek,Text,"VPEEK({x,y})","return the letter code located x, y on the screen (if omit x and y, using current position) Alias:VPEEK"
schema:DefiedTerm,48,==,=,IF A==B LED 1,6,イコール・イコール,計算,数 == 数,比較して等しい時に1、それ以外で0を返す。,equal equal,Calc,x == y,return 1 if x equals y else 0
schema:DefiedTerm,49,!=,<>,IF A!=B LED 1,6,ノット・イコール・トゥー,計算,数 != 数,比較して等しくない時に1、それ以外で0を返す,not equal to,Calc,x != y,return 1 if x does not equal y else 0
schema:DefiedTerm,50,<>,!=,IF A<>B LED 1,6,レス・アンド・グレーター・ザン,計算,数 <> 数,比較して等しくない時に1、それ以外で0を返す,less than and greater than,Calc,x <> y,return 1 if x does not equal y else 0
schema:DefiedTerm,51,<=,,IF A<=B LED 1,6,レス・ザン・オア・イコール・トゥー,計算,数 <= 数,比較して以下の時に1、それ以外で0を返す,less than or equal,Calc,x <= y,"return 1 if x <= y, else 0"
schema:DefiedTerm,52,<,,IF A<B LED 1,6,レス・ザン,計算,数 < 数,比較して未満の時に1、それ以外で0を返す,less than,Calc,x < y,return 1 if x < y else 0
schema:DefiedTerm,53,>=,,IF A>=B LED 1,6,グレーター・ザン・オア・イコール・トゥー,計算,数 >= 数,比較して以上の時に1、それ以外で0を返す,greater than or equal,Calc,x >= y,return 1 if x >= y else 0
schema:DefiedTerm,54,>,,IF A>B LED 1,6,グレーター・ザン,計算,数 > 数,比較してより大きい時に1、それ以外で0を返す,greater than,Calc,x > y,return 1 if x < y else 0
schema:DefiedTerm,55,AND,&&,IF A=1 AND B=1 LED 1,7,アンド,計算,式 AND 式,どちらの式も1の時に1、それ以外で0を返す,and,Calc,x AND y,return 1 if x and y else 0
schema:DefiedTerm,56,&&,AND,IF A=1 && B=1 LED 1,7,アンド,計算,式 && 式,どちらの式も1の時に1、それ以外で0を返す,and,Calc,x && y,return 1 if x and y else 0
schema:DefiedTerm,57,OR,||,IF A=1 OR B=1 LED 1,8,オア,計算,式 OR 式,どちらかの式が1の時に1、それ以外で0を返す,or,Calc,x OR y,return 1 if x or y else 0
schema:DefiedTerm,58,||,OR,IF A=1 || B=1 LED 1,8,オア,計算,式 || 式,どちらかの式が1の時に1、それ以外で0を返す,or,Calc,x || y,return 1 if x or y else 0
schema:DefiedTerm,59,NOT,!,IF NOT A=1 LED 1,3,ノット,計算,NOT 式,式が0の時に1、それ以外で0を返す,not,Calc,NOT x,return 1 if x equals 0 else 0
schema:DefiedTerm,60,!,NOT,IF !(A=1) LED 1,3,ノット,計算,! 式,式が0の時に1、それ以外で0を返す,not,Calc,! X,return 1 if x equals 0 else 0
schema:DefiedTerm,61,REM,',REM START,,リマーク,プログラム,REM,これ以降のコマンドを実行しない（コメント機能）,remark,Program,REM,not execute after this command (comment)
schema:DefiedTerm,62,',REM,"' START",,シングル・クォート,プログラム,',これ以降のコマンドを実行しない（コメント機能）,single quote,Program,',not execute after this command (comment)
schema:DefiedTerm,63,FOR,,FOR I=0 TO 10:?I:NEXT,,フォー,プログラム,FOR 変数=数1 TO 数2 {STEP 数3}:コマンド:NEXT,変数に数1をいれ、数2になるまで数3ずつ増やしながらNEXTまでをくりかえす （STEPは省略可、6段まで）,for,Program,FOR var=num1 TO num2 {STEP num3} / NEXT,"set num1 to var, execute the loop to the NEXT until var reach num2 by step num3 (you can omit STEP, nest limit:6)"
schema:DefiedTerm,64,TO,,FOR I=0 TO 10:?I:NEXT,,トゥー,プログラム,FOR 変数=数1 TO 数2 {STEP 数3}:コマンド:NEXT,変数に数1をいれ、数2になるまで数3ずつ増やしながらNEXTまでをくりかえす （STEP省略時は数3は1、6段まで）,to,Program,FOR var=num1 TO num2 {STEP num3} / NEXT,"set num1 to var, execute the loop to the NEXT until var reach num2 by step num3 (you can omit STEP, nest limit:6)"
schema:DefiedTerm,65,STEP,,FOR I=0 TO 10:?I:NEXT,,ステップ,プログラム,FOR 変数=数1 TO 数2 STEP 数3:コマンド:NEXT,変数に数1をいれ、数2になるまで数3ずつ増やしながらNEXTまでをくりかえす （STEPは省略可、6段まで）,step,Program,FOR var=num1 TO num2 {STEP num3} / NEXT,"set num1 to var, execute the loop to the NEXT until var reach num2 by step num3 (you can omit STEP, nest limit:6)"
schema:DefiedTerm,66,NEXT,,FOR I=0 TO 10:?I:NEXT,,ネクスト,プログラム,FOR 変数=数1 TO 数2 {STEP 数3}:コマンド:NEXT,変数に数1をいれ、数2になるまで数3ずつ増やしながらNEXTまでをくりかえす （STEPは省略可、6段まで）,next,Program,FOR var=num1 TO num2 {STEP num3} / NEXT,"set num1 to var, execute the loop to the NEXT until var reach num2 by step num3 (you can omit STEP, nest limit:6)"
schema:DefiedTerm,67,POS,,"?POS(0),POS(1)",,ポジション,テキスト,POS({数}),カーソル位置を返す（数、省略時または0:X+Y*幅、1:X座標、2:Y座標） *ver1.4以上,position,Text,POS({n}),"return a positon of cursor (num 0:X+Y*W, 1:X, 2:Y, ommit:0)"
schema:DefiedTerm,68,DRAW,,"DRAW 1,5,10,15",,ドロー,グラフィック,"DRAW 数1,数2{,数3,数4}{,数5}","数1,数2の座標から数3,数4の座標へ線を引く（座標は最大63x47）、数5に0指定で線を消し、2指定で反転する、省略時または1指定で線を引く *ver1.4以上",draw,Graphics,"DRAW x1,y1{,x2,y2}{,n}","draw a line or a point (n 0:clear, 1:set, 2:reverse, ommit:1)"
schema:DefiedTerm,69,POINT,,"?POINT(1,5)",,ポイント,グラフィック,"POINT(数1,数2)","数1,数2の座標にDRAWで描かれた点または文字があるときに1、そうでないとき0を返す *ver1.4以上",point,Graphics,"POINT(x,y)",return a point on the screen or not
schema:DefiedTerm,70,OUT,,"OUT 1,1",,アウト,入出力,"OUT 数1{,数2}",外部出力OUT1-11に0または1を出力する 数2を省略でまとめて出力できる（数2に-1指定でINへ切り替え、-2指定でプルアップ付きINへ切り替え ※IN3は除く）,out,I/O,"OUT num1{,num2}","output num2 to the output pin specified num1 (num1:OUT1-11, you can set all states when you omit num2, if num2 equals -1 the output pin switch into the input pin, if num2 equals -2 the output pin switch into the input with pull-up)"
schema:DefiedTerm,71,IN,,"LET A,IN(1)",,イン,入出力,IN({数}),"IN0-10から入力する（0または1） 数を省略してまとめて入力できる （IN0,1,4,9はプルアップ、IN5-8,10-11はOUTで切り替え時使用可能、IN0,9はボタン）",in,I/O,IN({num}),"return 1 if when input terminal pin is high else 0 (num:0-11 (IN0/1/4/9 pull up, IN5-8,10-11:if switched, IN0,9:button), you can get all states when you omit num)"
schema:DefiedTerm,72,ANA,,?ANA(),,アナログ,入出力,ANA({数}),"外部入力の電圧(0V-3.3V)を0-1023の数値で返す(2:IN2、5-8:IN5-8(OUT1-4)、0,9:BTN、省略で0)",analog,I/O,ANA({num}),"return the value 0-1023 specified voltage of input terminal (2:IN2, 5-8:IN5-8(OUT1-4), 0,9:BTN, 0:omitted)"
schema:DefiedTerm,73,PWM,,"PWM 2,100",,ピー・ダブリュー・エム,入出力,"PWM 数1,数2{,数3}",外部出力OUT2-5に数2で0.01msec単位で指定するパルスを出力する（0-2000、周期20msec）、数3で周期を指定（省略時2000=20msec、マイナス値指定で周期1/480）,PWM,I/O,"PWM num1,num2{,num3}","output num2(0.01msec) length pulse in num3(if omit 2000) period to the output pin specified num1 (num1:OUT2-5, OUT2-4 same period)"
schema:DefiedTerm,74,CLV,CLEAR,CLV,,クリア・バリアブル,プログラム,CLV,変数、配列を全部0にする,clear variables,Program,CLV,clear (set to zero) variables and array variables
schema:DefiedTerm,75,CLEAR,CLV,CLEAR,,クリア,プログラム,CLEAR,変数、配列を全部0にする,clear,Program,CLEAR,clear (set to zero) variables and array variables
schema:DefiedTerm,76,CLK,,CLK,,クリア・キー,キー入力,CLK,キーバッファとキーの状態をクリアする,clear keys,Key input,CLK,clear key buffer and key status
schema:DefiedTerm,77,CLO,,CLO,,クリア・アウトプット,入出力,CLO,入出力ピンを初期状態に戻す,clear output,I/O,CLO,initialize the input and output pins
schema:DefiedTerm,78,ABS,,?ABS(-2),1,アブソリュート,計算,ABS(数),絶対値を返す（マイナスはプラスになる）,absolute,Calc,ABS(num),return the absolute value
schema:DefiedTerm,79,[],,[3]=1,1,アレイ,計算,[数],"配列（[0]から[101]までの102コの連続した変数として使える） LET[0],1,2,3で連続代入可能",array,Calc,[num],"array variables (from [0] to [101] 102 series variables) you can set in series using LET[0],1,2,3"
schema:DefiedTerm,80,GOSUB,GSB,GOSUB 100,,ゴーサブ,プログラム,GOSUB 行番号,戻り先をスタックに積み、数または式で指定した行番号に飛ぶ（ネストは30段まで）,gosub,Program,GOSUB linenum,move to linenum and execute after this command when RETURN/RTN (nest limit:30)
schema:DefiedTerm,81,GSB,GOSUB,GSB 100,,ゴーサブ,プログラム,GSB 行番号,戻り先をスタックに積み、数または式で指定した行番号に飛ぶ（ネストは30段まで）,gosub,Program,GSB linenum,move to linenum and execute after this command when RETURN/RTN (nest limit:30)
schema:DefiedTerm,82,RETURN,RTN,RETURN,,リターン,プログラム,RETURN,GOSUB/GSBの呼び出し元へ戻る,return,Program,RETURN,back to linunum last GOSUB/GSB called
schema:DefiedTerm,83,RTN,RETURN,RTN,,リターン,プログラム,RTN,GOSUB/GSBの呼び出し元へ戻る,return,Program,RTN,back to linunum last GOSUB/GSB called
schema:DefiedTerm,84,DEC,,"?DEC$(99,3)",,デシ,テキスト,"DEC$(数1{,数2})",PRINT内で、数を文字列にする（２番目の数は桁数、省略可）,deci,Text,"DEC$(num1{,num2})","In PRINT, return strings from num1 with beam specified num2 (you can omit num2)"
schema:DefiedTerm,85,#,,#FF,1,ハッシュ,計算,#16進数,16進数で数を表記する *この後THENを省略しA〜Fで始まるコマンドを使う場合 : で区切る,hash,Calc,#hexnum,"return the number specified in hexadecimal *if you omit THEN after this, use : to separate"
schema:DefiedTerm,86,HEX,,"?HEX$(255,2)",,ヘックス,テキスト,"HEX$(数1{,数2})",PRINT内で、数を16進数の文字列にする（２番目の数は桁数、省略可）,hex,Text,"HEX$(num1{,num2})","In PRINT, return hexadecimal strings from num1 with beam specified num2 (you can omit num2)"
schema:DefiedTerm,87,`,,`1010,1,バック・クォート,計算,`2進数,2進数で数を表記する,back quote,Calc,`binnum,return the number specified in binary number
schema:DefiedTerm,88,BIN,,"?BIN$(255,8)",,バイナリー,テキスト,"BIN$(数1{,数2})",PRINT内で、数を2進数の文字列にする（２番目の数は桁数、省略可）,binary,Text,"BIN$(num1{,num2})","In PRINT, return binary number strings from num1 with beam spcified num2 (you can omit num2)"
schema:DefiedTerm,89,&,,?3&1,4,アンパサンド,計算,数 & 数,論理積（ビット演算）,ampersand,Calc,x & y,return x logical and y (bit calculation)
schema:DefiedTerm,90,|,,?3|1,5,パイプ,計算,数 | 数,論理和（ビット演算）,pipe,Calc,x | y,return x logical or y (bit calculation)
schema:DefiedTerm,91,^,,?A^1,4,ハット,計算,数 ^ 数,排他的論理和（ビット演算）,hat,Calc,x ^ y,return x logical exclusive or y (bit calculation)
schema:DefiedTerm,92,>>,,?A>>1,4,シフト・ライト,計算,数 >> 数,右シフトする（ビット演算）,shift right,Calc,x >> y,return x shift down y bits (bit calculation)
schema:DefiedTerm,93,<<,,?A<<1,4,シフト・レフト,計算,数 << 数,左シフトする（ビット演算）,shift left,Calc,x << y,return x shift up y bits (bit calculation)
schema:DefiedTerm,94,~,,?~A,3,チルダ,計算,~数,ビット反転（ビット演算）,tlda,Calc,~x,return bit inverted x (bit calculation)
schema:DefiedTerm,95,COS,,?COS(90),1,コサイン,計算,COS(数),指定された数を角度の度数としてコサインの値の256倍を返す *ver1.4以上,cosine,Calc,COS(deg),return cosine number times 256 by degrees *for ver1.4 or later
schema:DefiedTerm,96,SIN,,?SIN(90),1,サイン,計算,SIN(数),指定された数を角度の度数としてサインの値の256倍を返す *ver1.4以上,sine,Calc,SIN(deg),return sine number times 256 by degrees *for ver1.4 or later
schema:DefiedTerm,97,STOP,,STOP,,ストップ,プログラム,STOP,プログラムを中断する,stop,Program,STOP,stop the program
schema:DefiedTerm,98,CONT,,CONT,,コンティニュー,プログラム,CONT,実行中の行や、中断した行を再度実行する,continue,Program,CONT,continue the same line or stop line
schema:DefiedTerm,99,SOUND,,?SOUND(),,サウンド,サウンド,SOUND(),音が再生中なら1、そうで無いとき0をを返す,sound,Sound,SOUND(),return 1 if sound playing else 0
schema:DefiedTerm,100,FREE,,?FREE(),,フリー,プログラム,FREE(),プログラムの残りメモリ数を返す,free,Program,FREE(),return free memory of program (up to 1024 bytes)
schema:DefiedTerm,101,VER,,?VER(),,バージョン,プログラム,VER({数}),IchigoJam BASICのバージョン番号を返す,version,Program,VER({num}),"n=0 or default: return the version number of IchigoJam BASIC (n=0 or default) 1: return the language number of IchigoJam BASIC(1:Japanese 2:Mongol, 3:Vietnam)"
schema:DefiedTerm,102,RENUM,,RENUM,,リナンバー,プログラム,"RENUM {数1{,数2}}",プログラムの行番号を数1(省略時は10)から数2(省略時は10)刻みにする。GOTO/GOSUBの飛び先は手で変更必要な場合がある,renumber,Program,"RENUM {num1{,num2}}","renumber the line number of program from num1 step num2 (num1:10, num2:10 if omit, you may have to change manually line number specified in GOTO/GOSUB)"
schema:DefiedTerm,103,LRUN,,LRUN 1,,ロードラン,ファイル,"LRUN {数1{,数2}}",ファイル数1のプログラムを読み込み後、実行する(数2が指定されていたらその行へGOTO),load and run,File,"LRUN {{num1},num2}",LOAD num1 and RUN or GOTO num2
schema:DefiedTerm,104,FILE,,?FILE(),,ファイル,ファイル,FILE(),最後にプログラムを読み込み、書き込み行った数を返す,file,File,FILE(),return the number of last using FILE
schema:DefiedTerm,105,LINE,,?LINE(),,ライン,プログラム,LINE(),現在実行中の行番号を返す（非実行時は0）,line,Program,LINE(),return the line number of last execution
schema:DefiedTerm,106,SRND,,SRND 0,,エス・ランダム,プログラム,SRND 数,種を指定して乱数を初期化する,S random,Program,SRND num,initialize the seed of random
schema:DefiedTerm,107,HELP,,HELP,,ヘルプ,メモリ,HELP,メモリマップを表示する,help,Memory,HELP,display the memory map
schema:DefiedTerm,108,PEEK,,?PEEK(#700),,ピーク,メモリ,PEEK(数),メモリ読み出し（キャラクターパターン0-#7FFなど）,peek,Memory,PEEK(num),read 1 byte number from the memory in address specified num2
schema:DefiedTerm,109,POKE,,"POKE #700,#FF",,ポーク,メモリ,"POKE 数,数","メモリへの書き込み（連続書き込み可能 POKE#700,1,2,3）",poke,Memory,"POKE num1,num2",write 1 byte num1 specified to the memory in address specified num2
schema:DefiedTerm,110,COPY,,"COPY #900,0,256",,コピー,メモリ,"COPY 数1,数2,数3",メモリコピー 数1のアドレスへ数2のアドレスから数3の長さ分コピー(数3マイナスでコピー方向が逆になる),copy,Memory,"COPY num1,num2,num3","memory copy from num1 to num2 length specified num3 (if num3 is minus, copy direction is inverted)"
schema:DefiedTerm,111,CLP,,CLP,,クリア・パターン,メモリ,CLP,キャラクターパターン(#700-#7FF)を初期化する,clear pattern,Memory,CLP,initialize the character pattern memory (#700-#7FF)
schema:DefiedTerm,112,"""",,"A=""ABC""",,ダブル・クォート,テキスト,"""文字列""",文字列の先頭アドレスを返す,double quote,Text,"""strings""",return the address of strings on the memory
schema:DefiedTerm,113,STR,,PRINT STR$(A),,ストリング,テキスト,"STR$(数1{,数2})",PRINT内で、文字列を返す（数2(省略可)で長さ指定）,stings,Text,"STR$(num1{,num2})","In PRINT, return strings from address specified num1 (num2:length you can omit)"
schema:DefiedTerm,114,LEN,,"PRINT LEN(""ABC"")",,レングス,テキスト,"LEN(""文字列"")",文字列の長さを返す,length,Text,"LEN(""strings"")",return the length of strings
schema:DefiedTerm,115,@,,@LOOP,,アット・マーク,プログラム,@ラベル,行の先頭に書くとラベルとなり、行番号の代わりとして使える（GOTO @LOOPなど） ※前方一致,at mark,Program,@label,"Put in front of the line, you can as destination line number (type GOTO @LOOP)"
schema:DefiedTerm,116,VIDEO,,VIDEO 0,,ビデオ,テキスト,"VIDEO 数1{,数2}",画面表示非表示を切り替える 0で画面表示を停止し処理高速化 （F8で表示）、省略可能な数2でVIDEO0時CPUクロックを1/数2に変更し省電力化、数1が2の倍数で白黒反転、数1が3以上で拡大モード,video,Text,"VIDEO num1{,num2}","switch the video signal enabled or disabled (num0:0 disabled / 1 enable[F8] / 2 invert black and white / greater than bigmode, num2:when num0 is 0 clock down mode clock=1/num2)"
schema:DefiedTerm,117,RESET,,RESET,,リセット,プログラム,RESET,IchigoJamをリセットする,reset,Program,RESET,reboot the IchigoJam
schema:DefiedTerm,118,SLEEP,,SLEEP,,スリープ,プログラム,SLEEP,プログラムを休止する (ボタンを押すと起動し、LRUN0を実行する),sleep,Program,SLEEP,"sleep the IchigoJam (after push the button, execute and run file 0)"
schema:DefiedTerm,119,UART,,UART 0,,ユー・アート,入出力,"UART 数1{,数2}",数1：シリアル出力設定（0:オフ、1:PRINTのみ、2:PRINT/LC/CLS/SCROLL、3:PRINTのみ/改行コード\r\n、+4で入力エコーバック、+8で画面表示OFF、初期値:2）、数2：シリアル受信設定（0:オフ、1:オン、+2:ESC無効、+4:CR変換(13→10) 省略時1）,UART,I/O,"UART num1{,num2}","set UART mode (num1 0:off 1:with PRINT 2:with PRINT/LC/CLS/SCROLL 3:with PRINT and enter code is \r\n, echo back input with +4, disable screen put with +8, initial value:2) (num2 0:UART recv off, 1:on, +2:ignore ESC, +4:CR change(13→10), initial value:1)"
schema:DefiedTerm,121,BPS,,BPS 9600,,ビー・ピー・エス,入出力,"BPS 数1{,数2}","シリアル通信速度を変更する(0で初期値の115,200bps、-1:57600bps、-2:38400bps、-100以下指定で指定した数の-100倍bpsに指定、-2304:230400bps)。数2でI2Cの通信速度設定（単位kHz、0:デフォルト400kHz)",BPS,I/O,"BPS num1{,num2}","num1: set UART speed (0:115,200bps -1:57600bps -2:38400bps or 9600 and so on ... if -100 or less, -100 times speed. For example, if it is -2604, it is 260400 initial value:0), num2: set I2C speed(unit kHz, 0:400kHz default value:0)"
schema:DefiedTerm,120,OK,,OK 2,,オーケー,プログラム,OK {数},OKやエラーメッセージの表示有無を切り替える（数、1:表示、2:非表示、省略で1）,OK,Program,OK {num},"show OK and error messages (1: message on if omit, 2: message off)"
schema:DefiedTerm,121,I2CR,,"R=I2CR(#50,#114A,2,#114C,2)",,アイ・ツー・シー・リード,入出力,"I2CR(数1,数2,数3,数4,数5)",I2Cで周辺機器から読み込む I2Cアドレス、コマンド送信アドレス・長さ、受信アドレスと長さ（コマンド送信が1byteの時数3を省略可、コマンド送信が0byteの時数2/数3を省略可）,I two C read,I/O,"I2CR(num1,num2,num3,num4,num5)","read from I2C device num1:I2C address, num2:address of command, num2:length of command, num4:address of return data, num5:length of return data (if command is 1byte you can omit num2, if no commands num2/num3 you can omit)"
schema:DefiedTerm,122,I2CW,,"R=I2CW(#50,#114A,2,#114C,2)",,アイ・ツー・シー・ライト,入出力,"I2CW(数1,数2,数3,数4,数5)",I2Cで周辺機器に書き込む I2Cアドレス、コマンド送信アドレス・長さ、送信アドレスと長さ（数4/数5は省略可、コマンド送信が1byteの時数3を省略可）,I two C write,I/O,"I2CW(num1,num2,num3,num4,num5)","write to I2C device num1:I2C address, num2:address of command, num2:length of command, num4:address of return data, num5:length of return data (you can omit num4/num5, if command is 1byte you can omit num2)"
schema:DefiedTerm,123,IOT.IN,,R=IOT.IN(),,アイ・オー・ティー・イン,入出力,IOT.IN(),sakura.ioモジュールから受信した数を一つ読み込む,IoT in,I/O,IoT.IN(),get a received number from the sakura.io module
schema:DefiedTerm,124,IOT.OUT,,IOT.OUT 100,,アイ・オー・ティー・アウト,入出力,IOT.OUT 数,sakura.ioモジュールへ数をチャンネル0で即時送信する,IoT out,I/O,IoT.OUT num,send a number to send via the sakura.io module as the 0 channel
schema:DefiedTerm,125,WS.LED,,WS.LED 3,,ダブリュー・エス・エル・イー・ディー,入出力,"WS.LED 数1{,数2}",配列の先頭から緑赤青の順に設定された値でLEDに接続されたWS2812Bを数1の分光らせる。数2を指定するとその数だけ繰り返す。 *ver1.4以上,WS LED,I/O,"WS.LED num1{,num2}","The WS2812B connected to LED lights up by num1 with values ​​set in the order of green, red, and blue from the beginning of the array. If the num2 is specified, it repeats that number. *for ver 1.4"
schema:DefiedTerm,126,SWITCH,,SWITCH,,スイッチ,入出力,"SWITCH {数1{,数2}}",画面表示をテレビと液晶とを切り替える（数1 0:テレビ、1:液晶）、数2で液晶の濃さを指定,switch,I/O,SWITCH {num},"switch the video output, TV or LCD (0:TV 1:LCD)"
schema:DefiedTerm,127,USR,,"A=USR(#700,0)",,ユーザー,プログラム,"USR(数1{,数2})",数1で指定されたアドレスのマシン語(Arm Cortex-M0)を数2をパラメータとして呼び出す（数2省略で0）,user,Program,"USR(address{,num})",Call the machine language (Arm Cortex-M0) of the address specified by the num1 with the num2 as a parameter (0 for num2 omitted)